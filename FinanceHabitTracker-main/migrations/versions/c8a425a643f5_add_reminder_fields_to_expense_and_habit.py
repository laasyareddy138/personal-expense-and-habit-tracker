"""Add reminder fields to Expense and Habit

Revision ID: c8a425a643f5
Revises: 
Create Date: 2025-06-14 13:49:19.617848

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c8a425a643f5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification_setting')
    op.drop_table('notification_settings')
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reminder_time', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('reminder_enabled', sa.Boolean(), nullable=True))

    with op.batch_alter_table('habit', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reminder_time', sa.Time(), nullable=True))
        batch_op.add_column(sa.Column('reminder_enabled', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('habit', schema=None) as batch_op:
        batch_op.drop_column('reminder_enabled')
        batch_op.drop_column('reminder_time')

    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_column('reminder_enabled')
        batch_op.drop_column('reminder_time')

    op.create_table('notification_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('daily_summary_email', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('habit_reminders', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('reminder_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('notification_settings_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('notification_settings_pkey'))
    )
    op.create_table('notification_setting',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('daily_email', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('habit_reminders', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('reminder_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('notification_setting_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('notification_setting_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('notification_setting_user_id_key'))
    )
    # ### end Alembic commands ###
